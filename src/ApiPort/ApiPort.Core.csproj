<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <!-- Universal properties -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{560DD4EB-C4D2-4F94-9695-931CD3D17B5B}</ProjectGuid>
    <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ApiPort</RootNamespace>
    <AssemblyName>ApiPort</AssemblyName>
    <DefineConstants>NETCORE</DefineConstants>
    <FileAlignment>512</FileAlignment>
    <!-- Projects default to being signed, but Microsoft.Configuration.* assemblies are not signed -->
    <SignAssembly>false</SignAssembly>
  </PropertyGroup>
  <!-- Taken from: https://docs.microsoft.com/en-us/dotnet/articles/core/tutorials/target-dotnetcore-with-msbuild#creating-a-net-core-console-application -->
  <PropertyGroup>
    <TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v1.0</TargetFrameworkVersion>
    <BaseNuGetRuntimeIdentifier>win7</BaseNuGetRuntimeIdentifier>
    <NoStdLib>true</NoStdLib>
    <NoWarn>$(NoWarn);1701</NoWarn>
  </PropertyGroup>
  <!-- Output path properties -->
  <PropertyGroup>
    <IntermediateOutputPath>$(OutputIntermediate)\$(AssemblyName)</IntermediateOutputPath>
    <OutputPath>$(OutputDrop)\$(AssemblyName)\netcoreapp1.0\$(Platform)</OutputPath>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <!-- Configruation (OS and flavor) properties -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>TRACE;DEBUG;$(DefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;$(DefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Ubuntu_Debug'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG;TRACE;LINUX;$(DefineConstants)</DefineConstants>
    <DebugType>full</DebugType>
    <BaseNuGetRuntimeIdentifier>ubuntu.14.04</BaseNuGetRuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Ubuntu_Release'">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;LINUX;$(DefineConstants)</DefineConstants>
    <DebugType>pdbonly</DebugType>
    <BaseNuGetRuntimeIdentifier>ubuntu.14.04</BaseNuGetRuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Osx_Debug'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG;TRACE;OSX;$(DefineConstants)</DefineConstants>
    <DebugType>full</DebugType>
    <BaseNuGetRuntimeIdentifier>osx.10.10</BaseNuGetRuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Osx_Release'">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;OSX;$(DefineConstants)</DefineConstants>
    <DebugType>pdbonly</DebugType>
    <BaseNuGetRuntimeIdentifier>osx.10.10</BaseNuGetRuntimeIdentifier>
  </PropertyGroup>
  <!-- Platform (arch) properties -->
  <PropertyGroup Condition="'$(Platform)' == 'x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)' == 'x86'">
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)' == 'arm'">
    <PlatformTarget>arm</PlatformTarget>
  </PropertyGroup>
  <!-- Source files -->
  <ItemGroup>
    <Compile Include="AppCommands.cs" />
    <Compile Include="CommandLineOptions.cs" />
    <Compile Include="CommandLine\AnalyzeOptions.cs" />
    <Compile Include="CommandLine\ApiPortConfiguration.cs" />
    <Compile Include="CommandLine\CommonCommands.cs" />
    <Compile Include="CommandLine\ConsoleDefaultApiPortOptions.cs" />
    <Compile Include="CommandLine\DocIdSearchOptions.cs" />
    <Compile Include="CommandLine\ServiceEndpointOptions.cs" />
    <Compile Include="ConsoleApiPort.cs" />
    <Compile Include="DependencyBuilder.cs" />
    <Compile Include="DocIdSearchRepl.cs" />
    <Compile Include="EmptyDependencyFinder.cs" />
    <Compile Include="FileOutputApiPortService.cs" />
    <Compile Include="ApiPortServiceSearcher.cs" />
    <Compile Include="ICommandLineOptions.cs" />
    <Compile Include="Modules\DataTransferModule.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="ConsoleProgressReporter.cs" />
    <Compile Include="Proxy\ConsoleCredentialProvider.cs" />
    <Compile Include="Proxy\ProxyConstants.cs" />
    <Compile Include="Proxy\ProxyProvider.cs" />
    <Compile Include="Proxy\WebProxy.cs" />
    <Compile Include="Resources\LocalizedStrings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>LocalizedStrings.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Other resources -->
  <ItemGroup>
    <EmbeddedResource Include="Resources\LocalizedStrings.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>LocalizedStrings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <BinPlaceContent Include=".\Assets\KnownSafeBreaks.json" />
    <Content Include="Properties\version.txt" />
  </ItemGroup>
  <!-- NuGet references -->
  <ItemGroup>
    <None Include="ApiPort.Core.project.json" />
    <None Include="config.json" />
  </ItemGroup>
  <!-- Project references -->
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Fx.Portability.MetadataReader\Microsoft.Fx.Portability.MetadataReader.csproj">
      <Project>{68c6476e-1f80-412a-a8a7-480f832922d8}</Project>
      <Name>Microsoft.Fx.Portability.MetadataReader</Name>
    </ProjectReference>
    <ProjectReference Include="..\Microsoft.Fx.Portability\Microsoft.Fx.Portability.csproj">
      <Project>{8d84ec23-9977-4cc8-b649-035ffae9664c}</Project>
      <Name>Microsoft.Fx.Portability</Name>
    </ProjectReference>
  </ItemGroup>
  <!-- Targets includes -->
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Post-build actions -->
  <Target Name="AfterBuild">
    <Copy SourceFiles="@(BinPlaceContent)" DestinationFiles="@(BinPlaceContent->'$(TargetDir)\%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
  <!-- Taken from: https://docs.microsoft.com/en-us/dotnet/articles/core/tutorials/target-dotnetcore-with-msbuild#creating-a-net-core-console-application -->
  <PropertyGroup>
    <!-- We don't use any of MSBuild's resolution logic for resolving the framework, so just set these two
              properties to any folder that exists to skip the GetReferenceAssemblyPaths task (not target) and
              to prevent it from outputting a warning (MSB3644).
          -->
    <_TargetFrameworkDirectories>$(MSBuildThisFileDirectory)</_TargetFrameworkDirectories>
    <_FullFrameworkReferenceAssemblyPaths>$(MSBuildThisFileDirectory)</_FullFrameworkReferenceAssemblyPaths>
    <!-- MSBuild thinks all EXEs need binding redirects, not so for CoreCLR! -->
    <AutoUnifyAssemblyReferences>true</AutoUnifyAssemblyReferences>
    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
    <!-- Set up debug options to run with host, and to use the CoreCLR debug engine -->
    <!-- Depending on where dotnet.exe is installed, <StartProgram> may have to 
        be changed. We set $(DotNetExe) in lines 205 - 210-->
    <StartAction>Program</StartAction>
    <StartProgram>$(TargetDir)dotnet.exe</StartProgram>
    <StartArguments>$(TargetPath)</StartArguments>
    <DebugEngines>{2E36F1D4-B23C-435D-AB41-18E608940038}</DebugEngines>
  </PropertyGroup>
</Project>