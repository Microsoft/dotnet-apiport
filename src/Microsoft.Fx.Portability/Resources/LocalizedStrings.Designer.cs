//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Fx.Portability.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LocalizedStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizedStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Fx.Portability.Resources.LocalizedStrings", typeof(LocalizedStrings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias cannot be equal to a target name: &apos;{0}&apos;.
        /// </summary>
        public static string AliasCanotBeEqualToTargetNameError {
            get {
                return ResourceManager.GetString("AliasCanotBeEqualToTargetNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only single mappings between name and alias are supported.  The following aliases are invalid: {0}.
        /// </summary>
        public static string AliasMappedToMultipleNamesInvalidAliases {
            get {
                return ResourceManager.GetString("AliasMappedToMultipleNamesInvalidAliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing compatibility.
        /// </summary>
        public static string AnalyzingCompatibility {
            get {
                return ResourceManager.GetString("AnalyzingCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly.
        /// </summary>
        public static string AssemblyHeader {
            get {
                return ResourceManager.GetString("AssemblyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Grouped Targets:.
        /// </summary>
        public static string AvailableGroupedTargets {
            get {
                return ResourceManager.GetString("AvailableGroupedTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back to Summary.
        /// </summary>
        public static string BackToSummary {
            get {
                return ResourceManager.GetString("BackToSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that simply using a potentially broken API does not mean the app will necessarily suffer from the indicated breaking change. Many breaking changes are scoped to narrow corner-cases, and apps are only affected if they use the API in a very particular way. Breaking changes below have been grouped by scope (major, minor, or edge) depending on how likely the changes are to actually break user code in cases where the given API is used. Please read the &apos;details&apos; column to understand the particular circumstan [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BreakingChangeDisclaimer {
            get {
                return ResourceManager.GetString("BreakingChangeDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Catalog last updated on.
        /// </summary>
        public static string CatalogLastUpdated {
            get {
                return ResourceManager.GetString("CatalogLastUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given filename [{0}] has a different extension than the output format extension. Changed extension &apos;{1}&apos; to &apos;{2}&apos;..
        /// </summary>
        public static string ChangingFileExtension {
            get {
                return ResourceManager.GetString("ChangingFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framework Compatibility.
        /// </summary>
        public static string CompatibilityPageTitle {
            get {
                return ResourceManager.GetString("CompatibilityPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computing report..
        /// </summary>
        public static string ComputingReport {
            get {
                return ResourceManager.GetString("ComputingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write report to directory &apos;{0}&apos; with file name &apos;{1}&apos; and extension &apos;{2}&apos;..
        /// </summary>
        public static string CouldNotWriteReport {
            get {
                return ResourceManager.GetString("CouldNotWriteReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string DetailsPageTitle {
            get {
                return ResourceManager.GetString("DetailsPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detecting assembly references.
        /// </summary>
        public static string DetectingAssemblyReferences {
            get {
                return ResourceManager.GetString("DetectingAssemblyReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate alias: &apos;{0}&apos;.
        /// </summary>
        public static string DuplicateAliasError {
            get {
                return ResourceManager.GetString("DuplicateAliasError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edge issues are those that will only impact a small minority of customers that use the given API in very specific ways. See issue details for more information..
        /// </summary>
        public static string EdgeCompatIssueDescription {
            get {
                return ResourceManager.GetString("EdgeCompatIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, FileVersion:{1}.
        /// </summary>
        public static string FullAssemblyIdentity {
            get {
                return ResourceManager.GetString("FullAssemblyIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See &apos;http://go.microsoft.com/fwlink/?LinkId=397652&apos; to learn how to read this table.
        /// </summary>
        public static string HowToReadTheExcelTable {
            get {
                return ResourceManager.GetString("HowToReadTheExcelTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to specify a version, please use the following format with the &apos;-targets&apos; option:
        ///	(Target Name), Version=(Version).
        /// </summary>
        public static string HowToSpecifyVersion {
            get {
                return ResourceManager.GetString("HowToSpecifyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Portability Report.
        /// </summary>
        public static string HtmlReportTitle {
            get {
                return ResourceManager.GetString("HtmlReportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an unknown error attempting to reach the service.  Please try again..
        /// </summary>
        public static string HttpExceptionMessage {
            get {
                return ResourceManager.GetString("HttpExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifying assemblies to scan..
        /// </summary>
        public static string IdentifyAssembliesToScan {
            get {
                return ResourceManager.GetString("IdentifyAssembliesToScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid assembly..
        /// </summary>
        public static string InvalidAssembly {
            get {
                return ResourceManager.GetString("InvalidAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled breaking change parse state: {0}.
        /// </summary>
        public static string InvalidBreakingChangeParserState {
            get {
                return ResourceManager.GetString("InvalidBreakingChangeParserState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid category detected: {0}.
        /// </summary>
        public static string InvalidCategoryDetected {
            get {
                return ResourceManager.GetString("InvalidCategoryDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data.
        /// </summary>
        public static string InvalidDataMessage {
            get {
                return ResourceManager.GetString("InvalidDataMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file name: &apos;{0}&apos;.
        /// </summary>
        public static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Major issues are those that are likely to impact most customers using the given feature or API..
        /// </summary>
        public static string MajorCompatIssueDescription {
            get {
                return ResourceManager.GetString("MajorCompatIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Malformed map: {0}.
        /// </summary>
        public static string MalformedMap {
            get {
                return ResourceManager.GetString("MalformedMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member should be defined on a type.
        /// </summary>
        public static string MemberShouldBeDefinedOnTypeException {
            get {
                return ResourceManager.GetString("MemberShouldBeDefinedOnTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minor issues are those that will only impact customers using the given feature in a particular way. See issue details for more information..
        /// </summary>
        public static string MinorCompatIssueDescription {
            get {
                return ResourceManager.GetString("MinorCompatIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing assemblies.
        /// </summary>
        public static string MissingAssembliesPageTitle {
            get {
                return ResourceManager.GetString("MissingAssembliesPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reason.
        /// </summary>
        public static string MissingAssemblyStatus {
            get {
                return ResourceManager.GetString("MissingAssemblyStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found to upload..
        /// </summary>
        public static string NoFilesAvailableToUpload {
            get {
                return ResourceManager.GetString("NoFilesAvailableToUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource was not found..
        /// </summary>
        public static string NotFoundException {
            get {
                return ResourceManager.GetString("NotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not supported.
        /// </summary>
        public static string NotSupported {
            get {
                return ResourceManager.GetString("NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaced output file &apos;{0}&apos;.
        /// </summary>
        public static string OverwriteFile {
            get {
                return ResourceManager.GetString("OverwriteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portability Summary.
        /// </summary>
        public static string PortabilitySummaryPageTitle {
            get {
                return ResourceManager.GetString("PortabilitySummaryPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processed {0}/{1} files..
        /// </summary>
        public static string ProcessedFiles {
            get {
                return ResourceManager.GetString("ProcessedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processed {0} items..
        /// </summary>
        public static string ProcessedItems {
            get {
                return ResourceManager.GetString("ProcessedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must only contain letters or digits.
        /// </summary>
        public static string ProductInformationInvalidArgument {
            get {
                return ResourceManager.GetString("ProductInformationInvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Done].
        /// </summary>
        public static string ProgressReportDone {
            get {
                return ResourceManager.GetString("ProgressReportDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Failed].
        /// </summary>
        public static string ProgressReportFailed {
            get {
                return ResourceManager.GetString("ProgressReportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy authentication required to access: {0}. To resolve, try setting proxy in config.json.
        /// </summary>
        public static string ProxyAuthenticationRequiredMessage {
            get {
                return ResourceManager.GetString("ProxyAuthenticationRequiredMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Recommended changes.
        /// </summary>
        public static string RecommendedChanges {
            get {
                return ResourceManager.GetString("RecommendedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retargeting compatibility issues are breaking changes that only manifest when code is targeted to run on a newer .Net Framework version. This can happen if an application does not have a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.runtime.versioning.targetframeworkattribute%28v=vs.110%29.aspx&quot;&gt;TargetFrameworkAttribute&lt;/a&gt; or when the application is rebuilt with a newer toolset..
        /// </summary>
        public static string RetargetingCompatIssueDescriptionPart1 {
            get {
                return ResourceManager.GetString("RetargetingCompatIssueDescriptionPart1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These issues are less impactful than runtime compatibility issues because they can typically be worked around easily, either by using a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.runtime.versioning.targetframeworkattribute%28v=vs.110%29.aspx&quot;&gt;TargetFrameworkAttribute&lt;/a&gt; on the assembly, using a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb398202.aspx&quot;&gt;TargetFrameworkVersion&lt;/a&gt; in the project file, or using older tools at build-time, depending on the particular issue. See issue details [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RetargetingCompatIssueDescriptionPart2 {
            get {
                return ResourceManager.GetString("RetargetingCompatIssueDescriptionPart2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retargeting compatibility issues are breaking changes that only manifest when code is targeted to run on a newer .Net Framework version. These issues are less impactful than runtime compatibility issues because they can typically be worked around easily, either by using a TargetFrameworkAttribute on the assembly, using a TargetFrameworkVersion in the project file, or using older tools at build-time, depending on the particular issue. See issue details below for more information on how these breaking changes [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RetargetingCompatIssueDescriptionPlainText {
            get {
                return ResourceManager.GetString("RetargetingCompatIssueDescriptionPlainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving output formats..
        /// </summary>
        public static string RetrievingOutputFormats {
            get {
                return ResourceManager.GetString("RetrievingOutputFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving targets.
        /// </summary>
        public static string RetrievingTargets {
            get {
                return ResourceManager.GetString("RetrievingTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runtime compatibility issues are those that will occur simply by running code on a new .Net Framework version. These are the variety of breaking changes most likely to impact applications since they cannot be quirked away and do not depend on an application being recompiled..
        /// </summary>
        public static string RuntimeCompatIssueDescription {
            get {
                return ResourceManager.GetString("RuntimeCompatIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: A newer version of the application is available. Please update to the latest version to continue using this service.
        /// </summary>
        public static string ServerEndpointDeprecated {
            get {
                return ResourceManager.GetString("ServerEndpointDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The service endpoint has been deprecated. Please update the application to the latest version..
        /// </summary>
        public static string ServerEndpointMovedPermanently {
            get {
                return ResourceManager.GetString("ServerEndpointMovedPermanently", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submission Id.
        /// </summary>
        public static string SubmissionId {
            get {
                return ResourceManager.GetString("SubmissionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported: {0}+.
        /// </summary>
        public static string SupportedOn {
            get {
                return ResourceManager.GetString("SupportedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        public static string TargetInformationGroups {
            get {
                return ResourceManager.GetString("TargetInformationGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target member.
        /// </summary>
        public static string TargetMemberHeader {
            get {
                return ResourceManager.GetString("TargetMemberHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets.
        /// </summary>
        public static string Targets {
            get {
                return ResourceManager.GetString("Targets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type.
        /// </summary>
        public static string TargetTypeHeader {
            get {
                return ResourceManager.GetString("TargetTypeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint requires an authentication token..
        /// </summary>
        public static string UnauthorizedAccess {
            get {
                return ResourceManager.GetString("UnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error.  Please make sure you the most up-to-date version.
        /// </summary>
        public static string UnknownBadRequestMessage {
            get {
                return ResourceManager.GetString("UnknownBadRequestMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an unknown error code from the service: &apos;{0}&apos;.  Please make sure you have the most up-to-date version..
        /// </summary>
        public static string UnknownErrorCodeMessage {
            get {
                return ResourceManager.GetString("UnknownErrorCodeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find file: &apos;{0}&apos;.
        /// </summary>
        public static string UnknownFile {
            get {
                return ResourceManager.GetString("UnknownFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown output format: &apos;{0}&apos;.
        /// </summary>
        public static string UnknownResultFormat {
            get {
                return ResourceManager.GetString("UnknownResultFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown target &apos;{0}&apos;.
        /// </summary>
        public static string UnknownTarget {
            get {
                return ResourceManager.GetString("UnknownTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unresolved assembly.
        /// </summary>
        public static string UnresolvedUsedAssembly {
            get {
                return ResourceManager.GetString("UnresolvedUsedAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used By.
        /// </summary>
        public static string UsedBy {
            get {
                return ResourceManager.GetString("UsedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing {0} report.
        /// </summary>
        public static string WritingReport {
            get {
                return ResourceManager.GetString("WritingReport", resourceCulture);
            }
        }
    }
}
