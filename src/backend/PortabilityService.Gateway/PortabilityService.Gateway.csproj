<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>

    <!-- Temporarily include ASP.NET Core framework files in publish output to work
         around an issue where Windows ASP.NET Core libraries are not correctly populated
         in 2.0 Windows aspnetcore base Docker images
         https://github.com/aspnet/aspnet-docker/issues/412 -->
    <PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>

    <!-- Ocelot is not signed and there's no reason for a service assembly
        (as opposed to a library) to need a strong name signature -->
    <SignAssembly>false</SignAssembly>
    <DockerComposeProjectPath>..\..\..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.2.1" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.5" />
    <PackageReference Include="ocelot" Version="3.1.9" />
    <PackageReference Include="Polly" Version="5.3.1" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="2.5.0" />
    <PackageReference Include="Serilog.Sinks.ApplicationInsights" Version="2.5.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Serilog.Sinks.Debug" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.2" />
  </ItemGroup>

</Project>
