@*
    Copyright (c) Microsoft. All rights reserved.
    Licensed under the MIT license. See LICENSE file in the project root for full license information.
*@

@model Microsoft.Fx.Portability.Reports.RazorHtmlObject

@using Microsoft.Fx.Portability
@using Microsoft.Fx.Portability.ObjectModel
@using Microsoft.Fx.Portability.Reports.Html
@using Microsoft.Fx.Portability.Reports.Html.Resources
@using System.Linq

@{
    var reportingResult = Model.ReportingResult;
}

<h2>
    <a name="@LocalizedStrings.CompatibilityPageTitle"></a>@LocalizedStrings.CompatibilityPageTitle
</h2>
<div id="summary-compat-byassembly">
    <h3 class="compat-subheader">Per Assembly Overview:</h3>
    <table>
        <tbody>
            <tr>
                <th rowspan="2">@LocalizedStrings.AssemblyHeader</th>
                <th colspan="3" class="textCentered"><abbr title="@LocalizedStrings.RuntimeCompatIssueDescription">Runtime Issues</abbr></th>
                <th colspan="3" class="textCentered"><abbr title="@LocalizedStrings.RetargetingCompatIssueDescriptionPlainText">Retargeting Issues</abbr></th>
            </tr>
            <tr>
                <th><abbr title="@LocalizedStrings.MajorCompatIssueDescription">Major</abbr></th>
                <th><abbr title="@LocalizedStrings.MinorCompatIssueDescription">Minor</abbr></th>
                <th><abbr title="@LocalizedStrings.EdgeCompatIssueDescription">Edge</abbr></th>
                <th><abbr title="@LocalizedStrings.MajorCompatIssueDescription">Major</abbr></th>
                <th><abbr title="@LocalizedStrings.MinorCompatIssueDescription">Minor</abbr></th>
                <th><abbr title="@LocalizedStrings.EdgeCompatIssueDescription">Edge</abbr></th>
            </tr>

            @*Writing the summary body information here.*@
            @foreach (var kvp in Model.OrderedBreakingChangesByAssembly)
            {
                var assembly = kvp.Key;
                if (!Model.OrderedBreakingChangeSkippedAssemblies.Contains(assembly))
                {
                    var breaks = kvp.Value;
                    var majorIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Major && !b.Key.IsRetargeting);
                    var minorIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Minor && !b.Key.IsRetargeting);
                    var edgeIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Edge && !b.Key.IsRetargeting);
                    var majorRetargetingIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Major && b.Key.IsRetargeting);
                    var minorRetargetingIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Minor && b.Key.IsRetargeting);
                    var edgeRetargetingIssues = breaks.Where(b => b.Key.ImpactScope == BreakingChangeImpact.Edge && b.Key.IsRetargeting);

                    // Determine if the row is important or not (based on issue counts)
                    var rowClass = (majorIssues.Count() > 0 || minorIssues.Count() > 0) ? string.Empty : "lowPriRow";

                    // Create a link to compat details if they will exist
                    var link = (majorIssues.Count() + minorIssues.Count() + edgeIssues.Count() + majorRetargetingIssues.Count() + minorRetargetingIssues.Count() + edgeRetargetingIssues.Count()) > 0 ?
                                "#Compat-" + assembly :
                                "#" + LocalizedStrings.CompatibilityPageTitle;
                    <tr class="@rowClass">
                        <td>
                            <strong>
                                <a href="@link">
                                    <span class="assembly-name">@reportingResult.GetNameForAssemblyInfo(assembly)</span>
                                    @if (!string.IsNullOrEmpty(assembly.TargetFrameworkMoniker))
                                    {
                                        <span class="assembly-tfm">(@assembly.TargetFrameworkMoniker)</span>
                                    }
                                </a>
                            </strong>
                        </td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(majorIssues.Count(), 0, 2)</td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(minorIssues.Count(), 0, 3)</td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(edgeIssues.Count(), 0, 100)</td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(majorRetargetingIssues.Count(), 0, 2)</td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(minorRetargetingIssues.Count(), 0, 3)</td>
                        <td class="textCentered">@Html.WriteStyledBreakingChangeCount(edgeRetargetingIssues.Count(), 0, 100)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <p>@LocalizedStrings.BreakingChangeDisclaimer</p>
</div>
@if (Model.OrderedBreakingChangeSkippedAssemblies.Count() > 0)
{
    <div id="summary-compat-skippedassemblies">
        <h3 class="compat-subheader">Ignored Assemblies:</h3>
        <table>
            <tr>
                <th>Assembly</th>
            </tr>
            @foreach (AssemblyInfo assembly in Model.OrderedBreakingChangeSkippedAssemblies)
            {
                <tr>
                    <td>
                        <span class="assembly-name">@assembly</span>
                        @if (!string.IsNullOrEmpty(assembly.TargetFrameworkMoniker))
                        {
                            <span class="assembly-tfm">(@assembly.TargetFrameworkMoniker)</span>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
}
<div id="summary-compat-bybreakingchange">
    <h3 class="compat-subheader">Submission Overview:</h3>

    @Html.Partial("_CompatibilitySummary", new CompatibilitySummaryModel(Model.BreakingChangesSummary, null, null, 0))
</div>
<div id="CompatDetails">
    @{
        var loopCounter = 1;

        foreach (var kvp in Model.OrderedBreakingChangesByAssembly)
        {
            @Html.Partial("_CompatibilitySummary", new CompatibilitySummaryModel(kvp.Value, kvp.Key, reportingResult, loopCounter++))
        }
    }
</div>
